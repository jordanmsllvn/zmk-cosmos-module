/ {
    kscan0: kscan0 {
        compatible = "zmk,kscan-gpio-matrix";    /* standard GPIO matrix driver */ 
        diode-direction = "col2row";             /* diodes on row wires (pointing away from switch) */ 
        wakeup-source;                           /* allow key-press to wake MCU */ 

        /* All row pins, shared by both halves */
        row-gpios = 
            <&gpio1 13 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,
            <&gpio1 11 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,
            <&gpio0 10 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,
            <&gpio0 9 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>;
        col-gpios =
            <&gpio0 20 GPIO_ACTIVE_HIGH>, /* leftmost col to topmost pin */
            <&gpio0 22 GPIO_ACTIVE_HIGH>,
            <&gpio0 24 GPIO_ACTIVE_HIGH>,
            <&gpio1 0 GPIO_ACTIVE_HIGH>,
            <&gpio0 11 GPIO_ACTIVE_HIGH>,
            <&gpio1 4 GPIO_ACTIVE_HIGH>,
            <&gpio1 6 GPIO_ACTIVE_HIGH>;
    };

    /* 2. Matrix transform: stitch rows×cols → linear key indices */
    #include <dt-bindings/zmk/matrix_transform.h>
    default_transform: keymap_transform0 {
        compatible = "zmk,matrix-transform";
        columns    = <14>;    /* total columns across both halves */
        rows       = <4>;    /* rows per half */
        map = <
            /* Row 0: 6 keys (cols 0–5) */
            RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5)
            /* Row 1: 7 keys (cols 0–6) */
            RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5) RC(1,6)
            /* Row 2: 7 keys (cols 0–6) */
            RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5) RC(2,6)
            /* Row 3: 3 keys (cols 0–2) */
            RC(3,0) RC(3,1) RC(3,2)
        >;
    };

    /* 3. Physical layout: link scan + transform, set default */
    physical_layout0: physical_layout_0 {
        compatible   = "zmk,physical-layout";
        display-name = "Cosmos Default";
        kscan        = <&kscan0>;
        transform    = <&default_transform>;
    };

    chosen {
        zmk,physical-layout = &physical_layout0;
    };
};